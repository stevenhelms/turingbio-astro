---
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{title}</title>
    <meta name="description" content="Computational biology platform for systematic disease discovery and therapeutic development using multi-omics integration.">
    <link rel="icon" type="image/x-icon" href="./favicon.ico">
    <link rel="stylesheet" href="./global.css">
</head>
<body>
    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loading-overlay">
        <div class="loading-spinner"></div>
    </div>

    <!-- Scroll to Top Button -->
    <button class="scroll-to-top" id="scroll-to-top" aria-label="Scroll to top">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 19V5M5 12L12 5L19 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
    </button>

    <header id="header">
        <nav class="container">
            <a href="#" class="logo" aria-label="Turing Biosciences Home">
                <svg width="320" height="70" viewBox="0 0 320 70" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <!-- Network nodes -->
                    <circle cx="15" cy="20" r="4" fill="#6794EF"/>
                    <circle cx="30" cy="14" r="4" fill="#6794EF"/>
                    <circle cx="25" cy="35" r="4" fill="#6794EF"/>
                    <circle cx="10" cy="42" r="4" fill="#6794EF"/>
                    
                    <!-- Connecting lines -->
                    <line x1="15" y1="20" x2="30" y2="14" stroke="#6794EF" stroke-width="2.5"/>
                    <line x1="15" y1="20" x2="25" y2="35" stroke="#6794EF" stroke-width="2.5"/>
                    <line x1="15" y1="20" x2="10" y2="42" stroke="#6794EF" stroke-width="2.5"/>
                    <line x1="30" y1="14" x2="25" y2="35" stroke="#6794EF" stroke-width="2.5"/>
                    
                    <!-- TURING text -->
                    <text x="55" y="32" font-family="Inter,-apple-system,BlinkMacSystemFont,Segoe UI,sans-serif" font-size="28" font-weight="600" fill="#6794EF">TURING</text>
                    
                    <!-- BIOSCIENCES text -->
                    <text x="55" y="50" font-family="Inter,-apple-system,BlinkMacSystemFont,Segoe UI,sans-serif" font-size="18" font-weight="400" fill="#9CA3AF" letter-spacing="1px">BIOSCIENCES</text>
                </svg>
            </a>
            <ul class="nav-links">
                <li><a href="#validation">Validation</a></li>
                <li><a href="#pipeline">Pipeline</a></li>
                <li><a href="#contact">Contact</a></li>
            </ul>
            <div class="mobile-menu-btn" id="mobile-menu-btn">
                <span></span>
                <span></span>
                <span></span>
            </div>
        </nav>
    </header>

    <main>
        <slot />
    </main>

    <footer id="contact">
        <div class="container">
            <div class="footer-content">
                <div class="footer-brand">
                    <h3>Turing Biosciences</h3>
                    <p>Computational biology platform for systematic disease discovery and therapeutic development. Transforming how we understand and treat immune-mediated diseases through multi-omics integration and metabolite-based interventions.</p>
                </div>
                <div class="footer-section">
                    <h4>Platform</h4>
                    <a href="#validation">Validation Results</a>
                    <a href="#pipeline">Pipeline Overview</a>
                    <a href="#" onclick="scrollToTop()">Back to Top</a>
                </div>
                <div class="footer-section">
                    <h4>Company</h4>
                    <a href="#" onclick="showComingSoon('About Us')">About Us</a>
                    <a href="#" onclick="showComingSoon('News')">News & Updates</a>
                </div>
                <div class="footer-section">
                    <h4>Contact</h4>
                    <a href="#" onclick="showComingSoon('Technical Support')">Support</a>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; 2025 Turing Biosciences. All rights reserved. | Nexusâ„¢ is a trademark of Turing Biosciences.</p>
            </div>
        </div>
    </footer>

    <script>
        // Loading animation
        window.addEventListener('load', function() {
            const loadingOverlay = document.getElementById('loading-overlay');
            setTimeout(() => {
                loadingOverlay.classList.add('hidden');
            }, 800);
        });

        // Header scroll effect
        window.addEventListener('scroll', function() {
            const header = document.getElementById('header');
            if (window.scrollY > 100) {
                header.classList.add('scrolled');
            } else {
                header.classList.remove('scrolled');
            }
        });

        // Scroll to top button
        const scrollToTopBtn = document.getElementById('scroll-to-top');

        window.addEventListener('scroll', function() {
            if (window.pageYOffset > 300) {
                scrollToTopBtn.classList.add('visible');
            } else {
                scrollToTopBtn.classList.remove('visible');
            }
        });

        function scrollToTop() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        }

        scrollToTopBtn.addEventListener('click', scrollToTop);

        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Intersection Observer for fade-in animations
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver(function(entries) {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                }
            });
        }, observerOptions);

        document.querySelectorAll('.fade-in-on-scroll').forEach(el => {
            observer.observe(el);
        });

        // Mobile menu functionality (placeholder for future enhancement)
        const mobileMenuBtn = document.getElementById('mobile-menu-btn');
        mobileMenuBtn.addEventListener('click', function() {
            // Mobile menu toggle would go here
            console.log('Mobile menu clicked - functionality to be added');
        });

        // Coming soon modal for incomplete links
        function showComingSoon(feature) {
            alert(`${feature} coming soon! We're working hard to bring you this feature.`);
        }

        // Add some interactivity to metric cards
        document.querySelectorAll('.metric-card').forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-8px) scale(1.02)';
            });
            
            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(-5px) scale(1)';
            });
        });

        // Add click animation to buttons
        document.querySelectorAll('.btn-primary, .btn-secondary').forEach(btn => {
            btn.addEventListener('click', function(e) {
                let ripple = document.createElement('span');
                ripple.style.position = 'absolute';
                ripple.style.borderRadius = '50%';
                ripple.style.background = 'rgba(255, 255, 255, 0.3)';
                ripple.style.transform = 'scale(0)';
                ripple.style.animation = 'ripple 0.6s linear';
                ripple.style.left = (e.clientX - e.target.offsetLeft) + 'px';
                ripple.style.top = (e.clientY - e.target.offsetTop) + 'px';
                ripple.style.width = '20px';
                ripple.style.height = '20px';
                
                this.appendChild(ripple);
                
                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });

        // Add CSS for ripple effect
        const style = document.createElement('style');
        style.textContent = `
            @keyframes ripple {
                to {
                    transform: scale(4);
                    opacity: 0;
                }
            }
            .btn-primary, .btn-secondary {
                position: relative;
                overflow: hidden;
            }
        `;
        document.head.appendChild(style);

        // Add some dynamic behavior to progress bars
        function animateProgressBars() {
            const progressBars = document.querySelectorAll('.progress-bar');
            progressBars.forEach(bar => {
                const width = bar.style.width || bar.classList.contains('progress-25') ? '25%' : 
                             bar.classList.contains('progress-40') ? '40%' :
                             bar.classList.contains('progress-60') ? '60%' :
                             bar.classList.contains('progress-75') ? '75%' :
                             bar.classList.contains('progress-90') ? '90%' : '0%';
                
                bar.style.width = '0%';
                setTimeout(() => {
                    bar.style.transition = 'width 1.5s ease-out';
                    bar.style.width = width;
                }, 500);
            });
        }

        // Trigger progress bar animation when pipeline section comes into view
        const pipelineObserver = new IntersectionObserver(function(entries) {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    animateProgressBars();
                    pipelineObserver.unobserve(entry.target); // Only animate once
                }
            });
        }, { threshold: 0.3 });

        const pipelineSection = document.getElementById('pipeline');
        if (pipelineSection) {
            pipelineObserver.observe(pipelineSection);
        }

        // Add keyboard navigation support
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                // Close any open modals or menus
                console.log('Escape key pressed');
            }
            
            if (e.key === 'Enter' && e.target.classList.contains('btn-primary', 'btn-secondary')) {
                e.target.click();
            }
        });

        // Performance optimization: Debounce scroll events
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Apply debouncing to scroll handler
        const debouncedScrollHandler = debounce(function() {
            const header = document.getElementById('header');
            const scrollToTopBtn = document.getElementById('scroll-to-top');
            
            if (window.scrollY > 100) {
                header.classList.add('scrolled');
            } else {
                header.classList.remove('scrolled');
            }
            
            if (window.pageYOffset > 300) {
                scrollToTopBtn.classList.add('visible');
            } else {
                scrollToTopBtn.classList.remove('visible');
            }
        }, 10);

        // Replace the original scroll event listener
        window.removeEventListener('scroll', function() {}); // Remove previous listeners
        window.addEventListener('scroll', debouncedScrollHandler);

        // Analytics placeholder (for future implementation)
        function trackEvent(eventName, properties = {}) {
            console.log(`Event: ${eventName}`, properties);
            // Real analytics implementation would go here
        }

        // Track button clicks
        document.querySelectorAll('.btn-primary, .btn-secondary').forEach(btn => {
            btn.addEventListener('click', function() {
                trackEvent('button_click', {
                    button_text: this.textContent.trim(),
                    button_type: this.classList.contains('btn-primary') ? 'primary' : 'secondary'
                });
            });
        });

        console.log('Turing Biosciences website loaded successfully!');
    </script>
</body>
</html>
